{"version":3,"sources":["assets/img/theme/profile-cover.jpg","assets/img/brand/argon-react-white.png","useToken.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","components/ServiceCard/ServiceBody.js","components/ServiceCard/ServiceBodyContainer.js","components/ServiceCard/ServiceCard.js","views/Index.js","components/Headers/UserHeader.js","views/examples/Profile.js","views/examples/Login.js","views/examples/Tables.js","views/examples/editProfile.js","views/examples/addService.js","views/examples/addDriver.js","views/examples/ServiceInfo.js","routes.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","App.js","index.js","variables/charts.js","assets/img/theme/profile.jpg","assets/img/brand/argon-react.png"],"names":["useToken","useState","tokenString","localStorage","getItem","JSON","parse","getToken","token","setToken","userToken","setItem","stringify","AdminNavbar","props","name","setName","useEffect","fetchData","a","fetch","method","headers","result","json","body","data","surName","Navbar","className","expand","id","Container","fluid","to","brandText","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","tag","Link","Media","alt","src","require","default","NavItem","NavLink","onClick","removeItem","Footer","Row","Col","xl","Date","getFullYear","href","rel","target","Sidebar","navbarBrandProps","collapseOpen","setCollapseOpen","toggleCollapse","closeCollapse","routes","bgColor","logo","innerLink","outterLink","type","NavbarBrand","imgAlt","imgSrc","Collapse","isOpen","xs","map","prop","key","show","layout","path","NavLinkRRD","activeClassName","icon","createLinks","defaultProps","getStudentCount","schoolId","serviceId","students","length","Header","serviceLength","setServiceLength","studentCount","setStudentCount","allServices","services","allStudents","i","lg","Card","CardBody","CardTitle","ServiceBody","Button","plaque","showEntries","time","date","driver","getEntries","ServiceBodyContainer","serviceBody","setServiceBody","serviceEntries","setServiceEntries","success","driverName","entries","j","push","sort","b","dateA","split","dateB","timeA","timeB","valueA","service","renderSeeAll","color","ServiceCard","CardHeader","dashboard","Table","responsive","scope","Index","window","Chart","parseOptions","chartOptions","UserHeader","style","minHeight","backgroundImage","backgroundSize","backgroundPosition","md","getSchool","Profile","schoolName","setSchoolName","school","e","preventDefault","size","loginUser","credentials","response","Login","username","setUserName","password","setPassword","loginAttempt","setLoginAttempt","handleSubmit","email","res","console","log","Promise","resolve","setTimeout","onSubmit","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","autoComplete","onChange","value","Tables","setEmail","lastName","setLastName","then","event","editProf","htmlFor","message","setMessage","createService","Math","random","createDriver","schoolID","serviceName","driverID","setDriverName","driverLastName","setDriverLastName","setPlaque","setServiceName","deleteService","ServiceInfo","servicePlaque","setServicePlaque","setStudents","renderStudent","setRenderStudent","renderEntries","setRenderEntries","match","params","buttonValue","setButtonValue","showServiceEntriesButtonValue","setShowServiceEntriesButtonValue","studentName","setStudentName","studentSurname","setStudentSurname","studentYear","setStudentYear","getService","addStudent","surname","year","deleteStudent","studentId","entry","index","Form","Label","for","borderless","student","component","EditProfile","AddService","AddDriver","Admin","mainContent","React","useRef","location","useLocation","document","documentElement","scrollTop","scrollingElement","current","ref","pathname","from","AdminFooter","UncontrolledCollapse","toggler","Auth","classList","add","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","AuthFooter","App","render","ReactDOM","getElementById","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","ctx","this","_chart","vm","_view","borderWidth","horizontal","base","height","width","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","primary","secondary","info","danger","warning","chartExample1","options","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","label","item","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","module","exports","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","legend","display","position","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","forEach","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent","chartExample2","maxBarThickness"],"mappings":"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","file":"static/js/main.777b6f3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile-cover.7e4da472.jpg\";","export default __webpack_public_path__ + \"static/media/argon-react-white.2167595e.png\";","import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}","import { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  NavItem,\n  NavLink,\n  Navbar,\n  Nav,\n  Container,\n  Media,\n} from \"reactstrap\";\n\nimport { useState, useEffect } from 'react'\n\nimport useToken from '../../useToken'\n\nconst AdminNavbar = (props) => {\n\n    const [ name, setName ] = useState('')\n    const { token } = useToken();\n\n    // fetch data from the api\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/Auth', {\n                method: 'GET',\n                headers: {\n                    // set token\n                    'Authorization': 'Bearer ' + token,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const body = await result.json()\n            setName(body.data.name + ' ' + body.data.surName)\n\n        }\n\n        fetchData()\n    }, [])\n\n    // sign out funciton\n    const signOut = () => {\n        localStorage.removeItem('token');\n        props.setToken(null);\n    }\n\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"/\"\n          >\n            {props.brandText}\n          </Link>\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n          \n              \n            <UncontrolledDropdown nav>\n              <DropdownToggle to=\"/admin/user-profile\" tag={Link} className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/theme/profile.jpg\")\n                          .default\n                      }\n                    />\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                    <span className=\"mb-0 text-sm font-weight-bold\">\n                      {name}\n                    </span>\n                  </Media>\n                </Media>\n              </DropdownToggle>\n            </UncontrolledDropdown>\n            <NavItem>\n                <NavLink className=\"nav-link-icon\" to=\"/auth/login\" tag={Link}>\n                  <i className=\"ni ni-key-25\" />\n                  <span onClick={signOut} className=\"nav-link-inner--text\">Çıkış Yap</span>\n                </NavLink>\n              </NavItem>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Row className=\"align-items-center justify-content-xl-between\">\n        <Col xl=\"6\">\n          <div className=\"copyright text-center text-xl-left text-muted\">\n            © {new Date().getFullYear()}{\" \"}\n            <a\n              className=\"font-weight-bold ml-1\"\n              href=\"https://github.com/Penguin-Invasion/School-Service-System\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Penguin Vision\n            </a>\n          </div>\n        </Col>\n\n        <Col xl=\"6\">\n          <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n            <NavItem>\n              <NavLink\n                href=\"https://github.com/Penguin-Invasion/School-Service-System\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Penguin Vision\n              </NavLink>\n            </NavItem>\n\n           \n          </Nav>\n        </Col>\n      </Row>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useState } from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nvar ps;\n\nconst Sidebar = (props) => {\n  const [collapseOpen, setCollapseOpen] = useState();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  // toggles collapse between opened and closed (true/false)\n  const toggleCollapse = () => {\n    setCollapseOpen((data) => !data);\n  };\n  // closes the collapse\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  };\n  // creates the links that appear in the left menu / Sidebar\n  const createLinks = (routes) => {\n    return routes.map((prop, key) => {\n    if (prop.show) \n    {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    }});\n  };\n\n  const { bgColor, routes, logo } = props;\n  let navbarBrandProps;\n  if (logo && logo.innerLink) {\n    navbarBrandProps = {\n      to: logo.innerLink,\n      tag: Link,\n    };\n  } else if (logo && logo.outterLink) {\n    navbarBrandProps = {\n      href: logo.outterLink,\n      target: \"_blank\",\n    };\n  }\n\n  return (\n    <Navbar\n      className=\"navbar-vertical fixed-left navbar-light bg-white\"\n      expand=\"md\"\n      id=\"sidenav-main\"\n    >\n      <Container fluid>\n        {/* Toggler */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          onClick={toggleCollapse}\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* Brand */}\n        {logo ? (\n          <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n            <img\n              alt={logo.imgAlt}\n              className=\"navbar-brand-img\"\n              src={logo.imgSrc}\n            />\n          </NavbarBrand>\n        ) : null}\n        {/* User */}\n        {/* Collapse */}\n        <Collapse navbar isOpen={collapseOpen}>\n          {/* Collapse header */}\n          <div className=\"navbar-collapse-header d-md-none\">\n            <Row>\n              {logo ? (\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  {logo.innerLink ? (\n                    <Link to={logo.innerLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </Link>\n                  ) : (\n                    <a href={logo.outterLink}>\n                      <img alt={logo.imgAlt} src={logo.imgSrc} />\n                    </a>\n                  )}\n                </Col>\n              ) : null}\n              <Col className=\"collapse-close\" xs=\"6\">\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={toggleCollapse}\n                >\n                  <span />\n                  <span />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          {/* Navigation */}\n          <Nav navbar>{createLinks(routes)}</Nav>\n          {/* Divider */}\n          <hr className=\"my-3\" />\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nSidebar.defaultProps = {\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Sidebar;\n","import { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\nimport { useState, useEffect } from 'react'\nimport useToken from '../../useToken'\n\nconst getStudentCount = async (schoolId, serviceId, token) => {\n    const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + schoolId + '/Service/' + serviceId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n    })\n\n    const body = await result.json()\n    return body.data.students.length\n}\n\n\nconst Header = () => {\n    const [serviceLength, setServiceLength ] = useState(0);\n    const [ studentCount, setStudentCount ] = useState(0);\n    const { token } = useToken();\n\n    // fetch data from the api\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School', {\n                method: 'GET',\n                headers: {\n                    // set token\n                    'Authorization': 'Bearer ' + token,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const body = await result.json()\n            const schoolId = body.data[0].id\n            const allServices = body.data[0].services\n            let allStudents = 0;\n            // loop through the services and push the data into the array\n            for (let i = 0; i < allServices.length; i++) {\n                const id = allServices[i].id\n\n                allStudents += await getStudentCount(schoolId, id, token)\n            }\n\n            setServiceLength(body.data[0].services.length)\n            setStudentCount(allStudents)\n        }\n\n        fetchData()\n    }, [])\n\n\n  return (\n    <>\n      <div className=\"header penguin-bg pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Servis Sayısı\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{serviceLength}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                      \n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Sürücü Sayısı\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{serviceLength}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Öğrenci Sayısı\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">{studentCount}</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-users\" />\n                        </div>\n                      </Col>\n                      \n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react'\n\n// import Link\nimport { Link } from \"react-router-dom\";\n\nimport { Button } from \"reactstrap\";\n\n\nconst ServiceBody = (props) => {\n    return (\n        <tbody>\n                <tr>\n                <th> <Link to={`/admin/service-info/${props.schoolId}/${props.id}`}> <Button> {props.name} </Button> </Link> </th>\n                <td> {props.plaque} </td>\n                {\n                    props.showEntries ?\n                    <>\n                    <td> {props.time}</td>\n                    <td> {props.date}</td>\n                    </>\n                    :\n                    <>\n                    <td> {props.driver}</td>\n                    <td> {props.studentCount}</td>\n                    </>\n                }\n                \n                \n                </tr>\n        </tbody>\n    )\n}\n\nexport default ServiceBody\n","import React from 'react'\nimport ServiceBody from './ServiceBody'\nimport { useState, useEffect } from 'react'\n\nimport useToken from '../../useToken'\n\nconst getEntries = async (schoolId, serviceId, token) => {\n    const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + schoolId + '/Service/' + serviceId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n    })\n\n    const body = await result.json()\n    //console.log(\"body? \", body)\n    return body.data\n}\n\n\n\nconst ServiceBodyContainer = (props) => {\n    const [serviceBody, setServiceBody] = useState([])\n    const [serviceEntries, setServiceEntries] = useState([])\n    const { token } = useToken();\n\n    // fetch data from the api\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School', {\n                method: 'GET',\n                headers: {\n                    // set token\n                    'Authorization': 'Bearer ' + token,\n                    'Content-Type': 'application/json'\n                }\n            })\n\n\n            const body = await result.json()\n            //console.log(\"all body? \", body)\n\n            // if body.success is not true, then the user is not logged in\n            if (!body.success) {\n                \n                return;\n            }\n            \n            //console.log(\"all services\",body.data[0].services)\n\n            // declare an array to store the data\n            const serviceEntries = []\n            \n            const allServices = body.data[0].services\n\n            // loop through the services and push the data into the array\n            for (let i = 0; i < allServices.length; i++) {\n                const name = allServices[i].name\n                const plaque = allServices[i].plaque\n                const id = allServices[i].id\n                const data = await getEntries(body.data[0].id, allServices[i].id, token)\n                const driverName = data.driver.name + ' ' + data.driver.surName\n                const schoolId = body.data[0].id\n                allServices[i].driverName = driverName\n                allServices[i].studentCount = data.students.length\n                allServices[i].schoolId = schoolId\n                \n                const entries = data.entries\n\n                for (let j = 0; j < entries.length; j++) {\n                    serviceEntries.push({\n                        key: entries[j].id,\n                        id: id,\n                        name: name,\n                        plaque: plaque,\n                        schoolId: schoolId,\n                        time: entries[j].time,\n                        date: entries[j].date,\n                    })\n\n                }\n            }\n\n            // sort serviceEntries by date and time\n            serviceEntries.sort((a, b) => {\n                // convert date to mm/dd/yyyy\n                // split date into array due to '/'\n                const dateA = a.date.split('/')\n                const dateB = b.date.split('/')\n                // split time into array due to ':'\n                const timeA = a.time.split(':')\n                const timeB = b.time.split(':')\n\n                const valueA = new Date(dateA[2], dateA[1], dateA[0], timeA[0], timeA[1], timeA[2])\n                const valueB = new Date(dateB[2], dateB[1], dateB[0], timeB[0], timeB[1], timeB[2])\n                \n                return valueB - valueA\n            })\n\n            \n\n            //console.log(\"serviceEntries: \", serviceEntries)\n            setServiceEntries(serviceEntries)\n            setServiceBody(allServices)\n\n\n\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <>\n\n        {props.showEntries ?\n        <>\n            {serviceEntries.map(service => {\n                return (\n                    <ServiceBody\n                        //key={service.id}\n                        key={service.key}\n                        id={service.id}\n                        name={service.name}\n                        plaque={service.plaque}\n                        time={service.time}\n                        date={service.date}\n                        schoolId={service.schoolId}\n\n                        showEntries={props.showEntries}\n                    />\n                )\n            })}\n        </>\n        :\n        <>      \n            {serviceBody.map(service => {\n                return (\n                    <ServiceBody\n                        key={service.id}\n                        id={service.id}\n                        name={service.name}\n                        plaque={service.plaque}\n                        driver={service.driverName}\n                        studentCount={service.studentCount}\n                        schoolId={service.schoolId}\n\n                        showEntries={props.showEntries}\n                    />\n                )\n            })}\n        </>\n        }\n        </>\n        \n    )\n}\n\nexport default ServiceBodyContainer\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\n// service info\nimport ServiceBodyContainer from \"components/ServiceCard/ServiceBodyContainer\";\n\n\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nconst renderSeeAll = (show) => {\n    if (show === true)\n    {\n        return  <Button>\n                    <Link color=\"blue\" to=\"/admin/tables\">Tüm Servisleri Gör</Link>\n                </Button>\n    }\n}\n\nconst showAllServices = (show) => {\n    // className=\"penguin-table-body\"\n    return show ? <div>\n    <Table responsive>\n        <ServiceBodyContainer showEntries={show}/>\n  </Table>\n  </div> : <div>\n                <Table responsive>\n                    <ServiceBodyContainer showEntries={show}/>\n              </Table>\n              </div>\n} \n\n\nconst ServiceCard = (props) => {\n    return (\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n            <Card className=\"shadow penguin-card\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                <div className=\"col\">\n                    {\n                        // conditional rendering\n                        props.dashboard ?\n                        <>\n                            <h3 className=\"mb-0\">Servis Giriş Çıkış Saatleri </h3>\n                            <p className=\"text-sm mb-0\">Buradan Son Giriş Yapan Servisleri Görebilirsiniz. Dilediğiniz servise tıklayarak, servis bilgilerini görebilirsiniz.</p>\n                        </>\n                        :\n                        <>\n                            <h3 className=\"mb-0\">Tüm Ekli Servisler </h3>\n                            <p className=\"text-sm mb-0\">Buradan Sisteminizdeki Tüm Servisleri Görebilirsiniz. Dilediğiniz servis ismine tıklayarak, servis bilgilerini görebilirsiniz</p>\n                        </>\n                    }\n                </div>\n                <div className=\"col text-right\">\n                {renderSeeAll(props.dashboard)}\n                </div>\n                </Row>\n              </CardHeader>\n              <div>\n              <Table className=\"align-items-center table-flush penguin-table-head\" responsive>\n                <thead className=\"thead-light\">\n                    {// conditional rendering\n                    props.dashboard ? \n                    <>\n                  <tr>\n                        <th scope=\"col\">Servis İsmi</th>\n                        <th scope=\"col\">Plakası</th>\n                        <th scope=\"col\">Saat</th>\n                        <th scope=\"col\">Gün</th>\n                  </tr>\n                    </> : \n                    <>\n                    <tr>\n                        <th scope=\"col\">Servis İsmi</th>\n                        <th scope=\"col\">Plakası</th>\n                        <th scope=\"col\">Sürücü</th>\n                        <th scope=\"col\">Öğrenci Sayisi</th>\n                        </tr>\n                        {/* <th scope=\"col\">Saat</th>\n                        <th scope=\"col\">Gün</th> */}\n                    </>\n                    \n                    }\n                </thead>\n                <ServiceBodyContainer showEntries={props.dashboard}/>\n                </Table>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n    )\n}\n\nexport default ServiceCard\n","\nimport { useState } from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nimport ServiceCard from \"components/ServiceCard/ServiceCard\";\n\nconst Index = (props) => {\n  const [activeNav, setActiveNav] = useState(1);\n  const [chartExample1Data, setChartExample1Data] = useState(\"data1\");\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  const toggleNavs = (e, index) => {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <ServiceCard dashboard={true} />\n      </Container>\n    </>\n  );\n};\n\nexport default Index;\n","import { Link } from \"react-router-dom\";\nimport { Button, Container, Row, Col } from \"reactstrap\";\n\nimport { useState, useEffect } from 'react'\n\nimport useToken from '../../useToken'\n\nconst UserHeader = () => {\n\n    const [ name, setName ] = useState('')\n    const { token } = useToken();\n\n    // fetch data from the api\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/Auth', {\n                method: 'GET',\n                headers: {\n                    // set token\n                    'Authorization': 'Bearer ' + token,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const body = await result.json()\n            setName(body.data.name + ' ' + body.data.surName)\n\n        }\n\n        fetchData()\n    }, [])\n\n\n\n\n\n  return (\n    <>\n      <div\n        className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\n        style={{\n          minHeight: \"600px\",\n          backgroundImage:\n            \"url(\" +\n            require(\"../../assets/img/theme/profile-cover.jpg\").default +\n            \")\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center top\",\n        }}\n      >\n        {/* Mask */}\n        <span className=\"mask bg-gradient-default opacity-8\" />\n        {/* Header container */}\n        <Container className=\"d-flex align-items-center\" fluid>\n          <Row>\n            <Col lg=\"7\" md=\"10\">\n              <h1 className=\"display-2 text-white\">Merhaba {name}</h1>\n              <p className=\"text-white mt-0 mb-5\">\n                Bu ekranda, profil bilgilerinizi düzenleyebilirsiniz. Yeni servisler ekleyebilirsiniz. Yeni sürücüler ekleyebilirsiniz.\n              </p>\n              <div className=\"all-buttons\">\n                <Link\n                    color=\"white\"\n                    //onClick={(e) => e.preventDefault()}\n                    to=\"/admin/edit-profile\"\n                >\n                <Button className=\"edit-profile\">\n                    Profili Düzenle\n                </Button>\n                </Link>\n                <Link\n                    color=\"white\"\n                    to=\"/admin/add-driver\"\n                >\n                <Button className=\"add-driver\" >\n                    Sürücü ve Servis Ekle\n                </Button>\n                </Link>\n                <Link\n                    color=\"white\"\n                    //onClick={(e) => e.preventDefault()}\n                    to=\"/admin/add-service\"\n                >\n                </Link>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default UserHeader;\n","import {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n// core components\nimport UserHeader from \"components/Headers/UserHeader.js\";\n\nimport { useState, useEffect } from 'react'\n\nimport useToken from '../../useToken'\n\nconst getStudentCount = async (schoolId, serviceId, token) => {\n    const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + schoolId + '/Service/' + serviceId, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n    })\n\n    const body = await result.json()\n    return body.data.students.length\n}\n\nconst getSchool = async (token) => {\n    const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n    })\n\n    const body = await result.json()\n    //console.log(\"body? \", body)\n    return body.data[0]\n}\n\nconst Profile = () => {\n    const [ serviceLength, setServiceLength ] = useState(0);\n    const [ schoolName, setSchoolName ] = useState(\"\");\n    const [ name, setName ] = useState('')\n    const [ studentCount, setStudentCount ] = useState(0);\n    const { token } = useToken();\n\n    // fetch data from the api\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/Auth', {\n                method: 'GET',\n                headers: {\n                    // set token\n                    'Authorization': 'Bearer ' + token,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const body = await result.json()\n            //console.log(\"body in admin navbar\", body)\n            setName(body.data.name + ' ' + body.data.surName)\n\n            const school = await getSchool(token)\n            const serviceLength = school.services.length\n            const schoolName = school.name\n            const allServices = school.services\n            let allStudents = 0;\n\n            // loop through the services and push the data into the array\n            for (let i = 0; i < allServices.length; i++) {\n                const id = allServices[i].id\n                allStudents += await getStudentCount(school.id, id, token)\n            }\n\n            setServiceLength(serviceLength)\n            setSchoolName(schoolName)\n            setStudentCount(allStudents)\n        }\n\n        fetchData()\n    }, [])\n\n  return (\n    <>\n      <UserHeader />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <Col className=\"order-xl-2 mb-5 mb-xl-0\" xl=\"4\">\n            <Card className=\"card-profile shadow\">\n              <Row className=\"justify-content-center\">\n                <Col className=\"order-lg-2\" lg=\"3\">\n                  <div className=\"card-profile-image\">\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                      <img\n                        alt=\"...\"\n                        className=\"rounded-circle\"\n                        src={\n                          require(\"../../assets/img/theme/profile.jpg\")\n                            .default\n                        }\n                      />\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n              <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\">\n                <div className=\"d-flex justify-content-between\">\n                  <Button\n                    className=\"mr-4\"\n                    color=\"info\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                    size=\"sm\"\n                  >\n                    SSS\n                  </Button>\n                  <Button\n                    className=\"float-right\"\n                    color=\"default\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                    size=\"sm\"\n                  >\n                    SSS\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardBody className=\"pt-0 pt-md-4\">\n                <Row>\n                  <div className=\"col\">\n                    <div className=\"card-profile-stats d-flex justify-content-center mt-md-5\">\n                      <div>\n                        <span className=\"heading\"> {serviceLength} </span>\n                        <span className=\"description\">Servisler</span>\n                      </div>\n                      <div>\n                        <span className=\"heading\"> {serviceLength} </span>\n                        <span className=\"description\">Sürücüler</span>\n                      </div>\n                      <div>\n                        <span className=\"heading\">{ studentCount }</span>\n                        <span className=\"description\">Öğrenciler</span>\n                      </div>\n                      \n                    </div>\n                  </div>\n                </Row>\n                <div className=\"text-center\">\n                  <h3>\n                    {name}\n                  </h3>\n\n                  <div className=\"h5 mt-4\">\n                    <i className=\"ni business_briefcase-24 mr-2\" />\n                    Manager\n                  </div>\n                  <div>\n                    <i className=\"ni education_hat mr-2\" />\n                    {schoolName}\n                  </div>\n                  <hr className=\"my-4\" />\n                  \n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          \n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardBody,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n  Button,\n  Input,\n} from \"reactstrap\";\nimport { data } from \"jquery\";\n\n\n// 'content-encoding': 'gzip', \n// 'content-type': 'application/json; charset=utf-8', \n// 'date': 'Mon,17 Jan 2022 09:01:22 GMT',\n// 'server': 'Microsoft-IIS/10.0' ,\n// 'transfer-encoding': 'chunked', \n// 'vary': 'Accept-Encoding' ,\n// 'x-powered-by': 'ASP.NET'\n\nasync function loginUser(credentials) {\n    const response = await fetch('https://schoolservicesystem.azurewebsites.net/api/Auth', {\n      method: 'POST',\n      headers: {\n          // Access-Control-Allow-Origin\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n    \n    const body  = await response.json();\n    if (body.success) {\n        return body.data.token;\n    }\n\n    return null;\n\n}\n\n// loginUser func\nasync function c(credentials) {\n    const response = await fetch('http://localhost:3001/login');\n    const body = await response.json();\n\n    // iterate through body.data and check if credentials match\n    for (let i = 0; i < body.length; i++) {\n        if (body[i].email === credentials.email && body[i].password === credentials.password) {\n            return body[i].type;\n        }\n    }\n\n    return null;\n        \n} \n\nconst Login = ({setToken}) => {\n\n\n\n\n\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n    const [loginAttempt, setLoginAttempt] = useState(false);\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const email = username;\n        const res = await loginUser({\n            email,\n            password\n        });\n        console.log(res);\n        setToken(res);\n        \n        // sleep for 2 seconds\n        await new Promise(resolve => setTimeout(resolve, 1100));\n        setLoginAttempt(true);\n      }\n\n\n\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n        <CardBody className=\"px-lg-5 py-lg-5\">\n        <form onSubmit={handleSubmit}>\n              <FormGroup className=\"mb-3\">\n              {loginAttempt  && <h2>Geçersiz Kullanıcı Adı - Şifre</h2>}\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email veya Kullanıcı Adı\"\n                    type=\"text\"\n                    autoComplete=\"new-email\"\n                    onChange={e => setUserName(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Şifre\"\n                    type=\"password\"\n                    \n                    onChange={e => setPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              \n              <div className=\"text-center\">\n                    <Button type=\"submit\" className=\"add-service\">\n                        Giriş Yap\n                    </Button>\n              </div>\n            </form>\n\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col xs=\"10\">\n              <p className=\"text-light\">Şifrenizi unuttuysanız bize ulaşabilirsiniz. destek@penguin-invasion.com</p>\n          </Col>\n        </Row>\n        <Row>\n        <Col>\n              <p className=\"text-light\">Okulunuzda sistemimizi kullanmak isterseniz yazabilirsiniz. isbirligi@penguin-invasion.com</p>\n            \n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n  };\n\nexport default Login;\n","// reactstrap components\nimport {\n  Container,\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\n// service\nimport ServiceCard from \"components/ServiceCard/ServiceCard\";\n\nconst Tables = () => {\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        <ServiceCard dashboard={false} />\n      </Container>\n    </>\n  );\n};\n\nexport default Tables;\n","\nimport { Link } from \"react-router-dom\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n  // core components\n  import UserHeader from \"components/Headers/UserHeader.js\";\n  import { useState, useEffect } from \"react\";\n\n  import useToken from '../../useToken'\n\n  const Profile = () => {\n\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [lastName, setLastName] = useState('');\n\n    const { token } = useToken();\n\n    function handleSubmit(event) {\n      //event.preventDefault();\n      console.log('name:', name);\n      console.log('lastName:', lastName);\n      console.log('email:', email);\n      console.log('password:', password);\n\n      // create a credentials object\n    const credentials = {}\n        // add the values to the credentials object\n        // if values are not empty\n        if (name) credentials.name = name;\n        if (lastName) credentials.surName = lastName;\n        if (email) credentials.email = email;\n        if (password) credentials.password = password;\n\n        console.log('credentials:', credentials);\n      editProf(credentials);\n    }\n\n    async function editProf(credentials) {\n        return fetch('https://schoolservicesystem.azurewebsites.net/api/Profile', {\n          method: 'PATCH',\n          headers: {\n            // set token\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n            },\n          body: JSON.stringify(credentials)\n        })\n          .then(data => data.json())\n    }\n\n\n\n\n\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7  \" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"8\">\n            <CardHeader className=\"bg-white border-0\">\n                  <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                      <h3 className=\"mb-0\">Profil Düzenle</h3>\n                    </Col>\n                    \n                  </Row>\n                </CardHeader>\n              <Card className=\"bg-secondary shadow\">\n                <CardBody>\n                <form onSubmit={handleSubmit}>\n                <h6 className=\"heading-small text-muted mb-4\">\n                Bu ekrandan, bilgilerinizi güncelleyebilirsiniz. Sadece değişmesini istdiğiniz bilgileri gönderebilirsiniz.\n                </h6>\n                <div className=\"pl-lg-4\">\n                      <Row>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-username\"\n                            >\n                                Ad\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"name\"\n                              placeholder=\"Ad\"\n                            type=\"text\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                        <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Soyad\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              \n                              placeholder=\"Soyad\"\n                              id=\"lastName\"\n                            type=\"text\"\n                            value={lastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col lg=\"6\">\n                        <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-email\"\n                            >\n                              E Posta Adresi\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              id=\"input-email\"\n                              placeholder=\"ornek@gmail.com\"\n                              type=\"text\"\n                              id=\"email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                              \n                            />\n                          </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                          <FormGroup>\n                            <label\n                              className=\"form-control-label\"\n                              htmlFor=\"input-last-name\"\n                            >\n                              Yeni Şifre\n                            </label>\n                            <Input\n                              className=\"form-control-alternative\"\n                              \n                              placeholder=\"Şifre\"\n                              id=\"userName\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                            />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </div>\n\n\n                    <div>\n                       \n                    <Button type=\"submit\" className=\"add-service\">\n                        Gönder\n                    </Button>\n                    </div>\n\n                </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  };\n\n  export default Profile;\n","\nimport { Link } from \"react-router-dom\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n  // core components\n  import UserHeader from \"components/Headers/UserHeader.js\";\n  import { useState, useEffect } from \"react\";\n\n  const Profile = () => {\n    const [user, setUser] = useState([]);\n    const [services, setServices] = useState([]);\n    const [service, setService] = useState([]);\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('name:', name);\n    console.log('message:', message);\n    createService({\n      \"id\":Math.random(),\n     \"name\":name,\n     \"message\":message\n   });\n  }\n\n  async function createService(credentials) {\n      return fetch('http://localhost:3001/services', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      })\n        .then(data => data.json())\n  }\n\n\n\n    return (\n      <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7  \" fluid>\n          <Row>\n            <Col className=\"order-xl-1\" xl=\"8\">\n              <Card className=\"bg-secondary shadow\">\n                <form >\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"name\">Servis Plakasi</label>\n                        <input\n                        className=\"form-control\"\n                        id=\"name\"\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"message\">Message</label>\n                        <textarea\n                        className=\"form-control\"\n                        id=\"message\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        />\n                    </div>\n                    <button type=\"submit\" onClick={handleSubmit}>Submit</button>\n                </form>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  };\n\n  export default Profile;\n","\nimport { Link } from \"react-router-dom\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col,\n  } from \"reactstrap\";\n  // core components\n  import UserHeader from \"components/Headers/UserHeader.js\";\n  import { useState, useEffect } from \"react\";\n\n  \nimport useToken from '../../useToken'\n\nconst getSchool = async (credentials, token) => {\n    const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n    })\n\n    const body = await result.json()\n    //console.log(\"body? \", body)\n    if (body.success) {\n        createDriver(credentials, token, body.data[0].id);\n    }\n\n}\n\n\nasync function createDriver(credentials, token, schoolID) {\n    // create driver object\n    const driver = {}\n    driver.name = credentials.name;\n    driver.surName = credentials.surName; \n    driver.email = \"email@gmail.com\";\n    driver.password = \"password\";\n    const service = {}\n    service.name = credentials.serviceName;\n    service.plaque = credentials.plaque;\n\n\n    const response = await fetch('https://schoolservicesystem.azurewebsites.net/api/Manager/CreateDriver', {\n        method: 'POST',\n        headers: {\n            // set token\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS'\n            },\n        body: JSON.stringify(driver)\n    })\n    const body  = await response.json();\n\n\n    // if body.status success, call createService func\n    if (body.success) {\n        service.schoolID = schoolID;\n        service.driverID = body.data.id;\n        createService(service, token);\n    }\n}\n\nasync function createService(service, token) {\n\n    const response = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + service.schoolID + '/Service', {\n        method: 'POST',\n        headers: {\n            // set token\n            'Authorization': 'Bearer ' + token,\n            'Content-Type': 'application/json'\n            },\n        body: JSON.stringify(service)\n    })\n    //const body  = await response.json();\n    //console.log(\"add service response:\", body);\n    \n}\n\nconst Profile = () => {\n    \n    const { token } = useToken();\n    \n    const [driverName, setDriverName] = useState('');\n    const [driverLastName, setDriverLastName] = useState('');\n    const [plaque, setPlaque] = useState('');\n    const [serviceName, setServiceName] = useState('');\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        // console.log('driverName:', driverName);\n        // console.log('driverLastName:', driverLastName);\n        // console.log('serviceName:', serviceName);\n        // console.log('plaque:', plaque);\n\n        // create a credentials object\n        const credentials = {}\n        // add the values to the credentials object\n        // if values are not empty\n        if (driverName) credentials.name = driverName;\n        if (driverLastName) credentials.surName = driverLastName;\n        if (plaque) credentials.plaque = plaque;\n        if (serviceName) credentials.serviceName = serviceName;\n\n        getSchool(credentials, token);\n    }\n\n\n    return (\n        <>\n        <UserHeader />\n        {/* Page content */}\n        <Container className=\"mt--7  \" fluid>\n            <Row>\n            <Col className=\"order-xl-1\" xl=\"8\">\n            <CardHeader className=\"bg-white border-0\">\n                    <Row className=\"align-items-center\">\n                    <Col xs=\"8\">\n                        <h3 className=\"mb-0\">Sürücü ve Servis Ekle</h3>\n                    </Col>\n                    \n                    </Row>\n                </CardHeader>\n                <Card className=\"bg-secondary shadow\">\n                <CardBody>\n                <form onSubmit={handleSubmit}>\n                <h6 className=\"heading-small text-muted mb-4\">\n                Bu ekrandan, yeni sürücü ve plakasını ekleyebilirsiniz.\n                </h6>\n                <div className=\"pl-lg-4\">\n                        <Row>\n                        <Col lg=\"6\">\n                            <FormGroup>\n                            <label\n                                className=\"form-control-label\"\n                                htmlFor=\"input-username\"\n                            >\n                                Sürücü Adı\n                            </label>\n                            <Input\n                                className=\"form-control-alternative\"\n                                id=\"name\"\n                                placeholder=\"Ad\"\n                            type=\"text\"\n                            value={driverName}\n                            onChange={(e) => setDriverName(e.target.value)}\n                            />\n                            </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                        <FormGroup>\n                            <label\n                                className=\"form-control-label\"\n                                htmlFor=\"input-last-name\"\n                            >\n                                Sürücü Soyadı\n                            </label>\n                            <Input\n                                className=\"form-control-alternative\"\n                                \n                                placeholder=\"Soyad\"\n                                id=\"lastName\"\n                            type=\"text\"\n                            value={driverLastName}\n                            onChange={(e) => setDriverLastName(e.target.value)}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <Col lg=\"6\">\n                        <FormGroup>\n                            <label\n                                className=\"form-control-label\"\n                                htmlFor=\"input-email\"\n                            >\n                                Servis Adı\n                            </label>\n                            <Input\n                                className=\"form-control-alternative\"\n                                id=\"input-email\"\n                                placeholder=\"34ABC25\"\n                                type=\"text\"\n                                id=\"email\"\n                                value={serviceName}\n                                onChange={(e) => setServiceName(e.target.value)}\n                                \n                            />\n                            </FormGroup>\n                        </Col>\n                        <Col lg=\"6\">\n                        <FormGroup>\n                            <label\n                                className=\"form-control-label\"\n                                htmlFor=\"input-email\"\n                            >\n                                Plaka\n                            </label>\n                            <Input\n                                className=\"form-control-alternative\"\n                                id=\"input-email\"\n                                placeholder=\"34ABC25\"\n                                type=\"text\"\n                                id=\"email\"\n                                value={plaque}\n                                onChange={(e) => setPlaque(e.target.value)}\n                                \n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                    </div>\n\n\n                    <div>\n                        \n                    <Button type=\"submit\" className=\"add-service\">\n                        Gönder\n                    </Button>\n                    </div>\n\n                </form>\n                </CardBody>\n                </Card>\n            </Col>\n            </Row>\n        </Container>\n        </>\n    );\n};\n\nexport default Profile;\n","import Header from \"components/Headers/Header.js\";\n\nimport { Form, FormGroup, Input, Card, CardBody, Button, Col, Container, CardHeader, Row, Table, Label } from 'reactstrap';\n\nimport { useState, useEffect } from \"react\";\n\nimport useToken from '../../useToken'\n\n\nimport ServiceBody from \"components/ServiceCard/ServiceBody\";\n\n                \n\nconst deleteService = async (schoolId, serviceId, token) => {\n    const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + schoolId + '/Service/' + serviceId, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n        }\n    })\n\n    const body = await result.json()\n\n    console.log(\"log?\")\n}\n\n\nconst ServiceInfo = (props) => {\n    const [ serviceName, setServiceName ] = useState('');\n    const [ servicePlaque, setServicePlaque ] = useState('');\n    const [ driverName, setDriverName] = useState('');\n    const [ serviceEntries, setServiceEntries ] = useState([]);\n    const [ students, setStudents ] = useState([]);\n    const { token } = useToken();\n\n    const [ renderStudent, setRenderStudent ] = useState(false);\n    const [ renderEntries, setRenderEntries ] = useState(false);\n\n    const schoolId = props.match.params.schoolId;\n    const serviceId = props.match.params.id;\n\n    const [ buttonValue, setButtonValue ] = useState('Yeni Öğrenci Ekle');\n    const [ showServiceEntriesButtonValue, setShowServiceEntriesButtonValue ] = useState('Giriş Çıkış Listesini Göster');\n\n    const [ studentName, setStudentName ] = useState('');\n    const [ studentSurname, setStudentSurname ] = useState('');\n    const [ studentYear, setStudentYear ] = useState('');\n\n\n    const getService = async ()  => {\n        const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + schoolId + '/Service/' + serviceId, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n    \n        const body = await result.json()\n    \n        if (body.success) {\n            setServiceName(body.data.name);\n            setServicePlaque(body.data.plaque);\n            setDriverName(body.data.driver.name + ' ' + body.data.driver.surName);\n            setStudents(body.data.students);\n\n            const serviceEntries = body.data.entries;\n\n            // sort serviceEntries by date and time\n            serviceEntries.sort((a, b) => {\n                // convert date to mm/dd/yyyy\n                // split date into array due to '/'\n                const dateA = a.date.split('/')\n                const dateB = b.date.split('/')\n                // split time into array due to ':'\n                const timeA = a.time.split(':')\n                const timeB = b.time.split(':')\n\n                const valueA = new Date(dateA[2], dateA[1], dateA[0], timeA[0], timeA[1], timeA[2])\n                const valueB = new Date(dateB[2], dateB[1], dateB[0], timeB[0], timeB[1], timeB[2])\n                \n                return valueB - valueA\n            })\n\n            setServiceEntries(serviceEntries);\n        }\n    \n    }\n\n    useEffect(() => {\n        getService();\n    }, [])\n\n    const renderStudentForm = () => {\n        setRenderStudent(!renderStudent);\n        if (!renderStudent) {\n            setButtonValue('Öğrenci Eklemeyi Bitir');\n        }\n        else {\n            setButtonValue('Yeni Öğrenci Ekle');\n        }\n    }\n\n    const renderServiceEntries = () => {\n        setRenderEntries(!renderEntries);\n        if (!renderEntries) {\n            setShowServiceEntriesButtonValue('Giriş Çıkış Listesini Göster');\n        }\n        else {\n            setShowServiceEntriesButtonValue('Giriş Çıkış Listesini Gizle');\n        }\n    }\n\n    const addStudent = async () => {\n        const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + schoolId + '/Service/' + serviceId + '/Student', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            },\n            body: JSON.stringify({\n                name: studentName,\n                surname: studentSurname,\n                year: studentYear\n            })\n        })\n\n        const body = await result.json()\n\n    }\n\n    const deleteStudent = async (studentId) => {\n        console.log(\"studentId\", studentId)\n        const result = await fetch('https://schoolservicesystem.azurewebsites.net/api/School/' + schoolId + '/Service/' + serviceId + '/Student/' + studentId, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n\n        const body = await result.json()\n    }\n\n\n\n    return (\n        <>\n        <Header />\n      {/* Page content */}    \n      <Container className=\"mt--7  \" fluid>\n      <Row>\n        <Col className=\"order-xl-1\" xl=\"8\">\n        <CardHeader className=\"table-head-color border-0\">\n        <Row className=\"align-items-center\">\n        <Col xs=\"8\">\n            <h3 className=\"mb-0 very-light-color\">Servis Bilgileri</h3>\n            <p>Bu ekrandan, servis bilgielrine bakabilir, servisi silebilir ve yeni öğrenciler ekleyebilirsiniz.</p>\n        </Col>\n        <Col className=\"text-right\" xs=\"4\">\n            <Button onClick={() => deleteService(schoolId, serviceId, token)} color=\"warning\" size=\"sm\">Servisi Kaldır</Button>\n        </Col>\n        \n        </Row>\n        </CardHeader>\n        <Card  className=\"bg-success shadow\">\n            \n        <div className=\"table-service-info\">\n        <div>\n            <h3 className=\"mb-0 very-light-color\">Servis Adı:</h3>\n            <p>{serviceName}</p>\n        </div>\n        <div>\n            <h3 className=\"mb-0 very-light-color\">Servis Plakası:</h3>\n            <p> {servicePlaque} </p>\n        </div>\n        <div>\n            <h3 className=\"mb-0 very-light-color\">Sürücü İsmi:</h3>\n            <p> {driverName} </p>\n        </div>\n        \n        <Button onClick={renderServiceEntries} color=\"primary\" size=\"sm\">{showServiceEntriesButtonValue}</Button>\n        {renderEntries && <>\n            <Table>\n                <thead>\n                    <tr>\n                        <th className=\"very-light-color\">Saat</th>\n                        <th className=\"very-light-color\">Tarih</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {serviceEntries.map((entry, index) => {\n                        return (\n                            <tr key={index}>\n                                <td className=\"very-light-color\">{entry.time}</td>\n                                <td className=\"very-light-color\">{entry.date}</td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </>}\n\n        </div>\n    <CardHeader className=\"table-head-color-student border-0\">\n        <Row className=\"align-items-center\">\n        <Col xs=\"8\">\n            <h3 className=\"mb-0 very-light-color\">Öğrenci Bilgileri</h3>\n            <p>Öğrenci bilgileri listelenmektedir. Yeni Öğrenci eklemek için butonu kullanabilirsiniz.</p>\n        </Col>\n        <Col className=\"text-right\" xs=\"4\">\n            <Button onClick={renderStudentForm} color=\"info\" size=\"sm\">{ buttonValue }</Button>\n        </Col>\n        {// contidional rendering\n        renderStudent ?\n        <>\n            <Form>\n                <Row className=\"align-items-center\">\n                    <Col>\n                        <FormGroup>\n                        <Label for=\"studentName\">Öğrenci Adı</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"name\"\n                                placeholder=\"İsim\"\n                                value={studentName}\n                                onChange={(e) => setStudentName(e.target.value)}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                        <Label for=\"studentSurname\">Öğrenci Soyadı</Label>\n                            <Input\n                                type=\"text\"\n                                name=\"lastName\"\n                                id=\"lastName\"\n                                placeholder=\"Soyisim\"\n                                value={studentSurname}\n                                onChange={(e) => setStudentSurname(e.target.value)}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                        <Label for=\"studentYear\">Öğrenci Giriş Yılı</Label>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                placeholder=\"Giriş Yılı\"\n                                value={studentYear}\n                                onChange={(e) => setStudentYear(e.target.value)}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                    <Button onClick={addStudent} className=\"bg-info\" >Kaydet</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </> : null}\n        \n        </Row>\n    </CardHeader>\n    <Table className=\"table-content-color-student\" borderless>\n        <thead>\n            <tr>\n            <th>Öğrenci İsmi</th>\n            <th>Öğrenci Soyismi</th>\n            <th>Giriş Yılı</th>\n            <th>Öğrenciyi Sil</th>\n            </tr>\n        </thead>\n        <tbody>\n            \n            {students.map( (student, index) => {\n                return (\n                    <tr key={index}>\n                    <td>{student.name}</td>\n                    <td>{student.surName}</td>\n                    <td>{student.year}</td>\n                    <td><Button onClick={() => deleteStudent(student.id)} color=\"danger\" size=\"sm\">Sil</Button></td>\n                    </tr>\n                )\n            })}\n            \n        </tbody>\n    </Table>\n    \n        </Card>\n        </Col>\n        </Row>\n    </Container>\n        </>\n    )\n}\n\nexport default ServiceInfo\n","import Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport EditProfile from \"views/examples/editProfile.js\";\nimport AddService from \"views/examples/addService.js\";\nimport AddDriver from \"views/examples/addDriver.js\";\nimport ServiceInfo from \"views/examples/ServiceInfo.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    show: true,\n    name: \"Panel\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    show: true,\n    name: \"Profilim\",\n    icon: \"ni ni-single-02 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/tables\",\n    show: true,\n    name: \"Tüm Servisler\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Tables,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/login\",\n    show: false,\n    name: \"Login\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n  },\n  {\n    path: \"/edit-profile\",\n    show: false,\n    name: \"Edit Profile\",\n    icon: \"ni ni-key-25 text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/add-service\",\n    show: false,\n    name: \"Edit Service\",\n    icon: \"ni ni-key-25 text-info\",\n    component: AddService,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/edit-profile\",\n    show: false,\n    name: \"Edit Profile\",\n    icon: \"ni ni-key-25 text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/service-info/:schoolId/:id\",\n    show: false,\n    name: \"Service Info\",\n    icon: \"ni ni-key-25 text-info\",\n    component: ServiceInfo,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/add-Driver\",\n    show: false,\n    name: \"Edit Driver\",\n    icon: \"ni ni-key-25 text-info\",\n    component: AddDriver,\n    layout: \"/admin\",\n  },\n\n];\nexport default routes;\n","import React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    return \"School Service System\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: require(\"../assets/img/brand/argon-react.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content penguin-align\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/index\" />\n        </Switch>\n        <Container fluid>\n          <AdminFooter />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n","\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={\n                require(\"../../assets/img/brand/argon-react-white.png\").default\n              }\n            />\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/brand/argon-react.png\")\n                          .default\n                      }\n                    />\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                  <i className=\"ni ni-planet\" />\n                  <span className=\"nav-link-inner--text\">Dashboard</span>\n                </NavLink>\n              </NavItem>\n              \n              <NavItem>\n                <NavLink\n                  className=\"nav-link-icon\"\n                  to=\"/admin/user-profile\"\n                  tag={Link}\n                >\n                  <i className=\"ni ni-single-02\" />\n                  <span className=\"nav-link-inner--text\">Profile</span>\n                </NavLink>\n              </NavItem>\n            </Nav> */}\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nconst Login = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <a\n                  className=\"font-weight-bold ml-1\"\n                  href=\"https://github.com/Penguin-Invasion/School-Service-System\"\n                  target=\"_blank\"\n                >\n                  Penguin Invasion\n                </a>\n              </div>\n            </Col>\n            \n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\nimport Login from \"views/examples/Login.js\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\n\nconst Auth = (props) => {\n\n\n\n\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n          <Container>\n            <div className=\"header-body text-center mb-7\">\n              <Row className=\"justify-content-center\">\n                <Col lg=\"5\" md=\"6\">\n                  <h1 className=\"text-white\">Hoş Geldiniz!</h1>\n                  <p className=\"text-lead text-light\">\n                    Okul Servis sistemimize buradan giriş yapabilirsiniz.\n                  </p>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            {/* <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/auth/login\" />\n            </Switch> */}\n            <Login  setToken={props.setToken} />\n          </Row>\n        </Container>\n      </div>\n      <AuthFooter />\n    </>\n  );\n};\n\nexport default Auth;\n","import { useState } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\n\nimport useToken from './useToken';\n\n// take token from local storage and check if undefined, clear the local storage\n// if token is not undefined, set the token to the state\n// if token is undefined, redirect to login page\nconst checkToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const token = JSON.parse(tokenString);\n    if (token === null || token === undefined) {\n        localStorage.clear();\n    }\n}\n      \nconst App = () => {\n\n    //checkToken();\n          \n    const { token, setToken } = useToken();\n\n\n    // if user not logged in, redirect to login page\n    if (!token) {\n        return (\n            <HashRouter>\n                <Switch>\n                    {/* <Route path=\"/admin\" component={AdminLayout} /> */}\n                    {/* send props to AuthLayout */}\n                    <Route path=\"/auth\" render={props => <AuthLayout {...props} setToken={setToken} />} />\n                    {/* <Route path=\"/auth\" component={AuthLayout} foo={\"bar\"} /> */}\n                    <Redirect from=\"/\" to=\"/auth/login\" />\n                </Switch>\n            </HashRouter>\n        );\n    }\n\n\n    return (\n        <HashRouter>\n            <Switch>\n            <Route path=\"/admin\" render={(props) => <AdminLayout {...props} setToken={setToken} />} />\n            {/* <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} /> */}\n            <Redirect from=\"/\" to=\"/admin/index\" />\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function () {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [\n    [left, bottom],\n    [left, top],\n    [right, top],\n    [right, bottom],\n  ];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\",\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\",\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\",\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\",\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0,\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16,\n          },\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"],\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\",\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"],\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4,\n          },\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false,\n        },\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function (chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        },\n      },\n    },\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2],\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function (value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      },\n    },\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false,\n    },\n    ticks: {\n      padding: 20,\n    },\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900],\n          },\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            },\n          },\n        },\n      ],\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        },\n      },\n    },\n  },\n  data1: (canvas) => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60],\n        },\n      ],\n    };\n  },\n  data2: (canvas) => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40],\n        },\n      ],\n    };\n  },\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            },\n          },\n        },\n      ],\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        },\n      },\n    },\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10,\n      },\n    ],\n  },\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2, // used inside src/views/Index.js\n};\n","export default __webpack_public_path__ + \"static/media/profile.7e4da472.jpg\";","export default __webpack_public_path__ + \"static/media/argon-react.2167595e.png\";"],"sourceRoot":""}