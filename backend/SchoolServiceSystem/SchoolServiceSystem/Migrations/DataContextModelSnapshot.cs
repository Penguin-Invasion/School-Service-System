// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolServiceSystem.Data;

namespace SchoolServiceSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolServiceSystem.Models.Entry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ServiceID");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.School", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Test Okul1",
                            SecretKey = "sadasdasd",
                            UserID = 2
                        },
                        new
                        {
                            ID = 2,
                            Name = "Test Okul1",
                            SecretKey = "sadasdasd",
                            UserID = 3
                        });
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DriverID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SchoolID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DriverID")
                        .IsUnique();

                    b.HasIndex("SchoolID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DriverID = 4,
                            Name = "Test Servis1",
                            Plaque = "34 A 0001",
                            SchoolID = 1
                        },
                        new
                        {
                            ID = 2,
                            DriverID = 5,
                            Name = "Test Servis2",
                            Plaque = "34 A 0002",
                            SchoolID = 2
                        });
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ServiceID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "admin",
                            Name = "Admin",
                            Password = "123",
                            Role = 0,
                            SurName = "Test"
                        },
                        new
                        {
                            ID = 2,
                            Email = "manager1",
                            Name = "Manager1",
                            Password = "123",
                            Role = 1,
                            SurName = "Test"
                        },
                        new
                        {
                            ID = 3,
                            Email = "manager2",
                            Name = "Manager2",
                            Password = "123",
                            Role = 1,
                            SurName = "Test"
                        },
                        new
                        {
                            ID = 4,
                            Email = "driver1",
                            Name = "Driver1",
                            Password = "123",
                            Role = 2,
                            SurName = "Test"
                        },
                        new
                        {
                            ID = 5,
                            Email = "driver2",
                            Name = "Driver2",
                            Password = "123",
                            Role = 2,
                            SurName = "Test"
                        });
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.Entry", b =>
                {
                    b.HasOne("SchoolServiceSystem.Models.Service", "Service")
                        .WithMany("Entries")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.School", b =>
                {
                    b.HasOne("SchoolServiceSystem.Models.User", "User")
                        .WithOne("School")
                        .HasForeignKey("SchoolServiceSystem.Models.School", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.Service", b =>
                {
                    b.HasOne("SchoolServiceSystem.Models.User", "Driver")
                        .WithOne("Service")
                        .HasForeignKey("SchoolServiceSystem.Models.Service", "DriverID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SchoolServiceSystem.Models.School", "School")
                        .WithMany("Services")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("School");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.Student", b =>
                {
                    b.HasOne("SchoolServiceSystem.Models.Service", "Service")
                        .WithMany("Students")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.School", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.Service", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolServiceSystem.Models.User", b =>
                {
                    b.Navigation("School");

                    b.Navigation("Service");
                });
#pragma warning restore 612, 618
        }
    }
}
